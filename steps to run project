1. Ensure the dataset is available
Place `IRIS.csv` in the same directory as the script.
This dataset contains measurements of different iris flower species.
2. Install necessary dependencies
Run the following command to install required libraries:
```bash
pip install pandas numpy seaborn matplotlib scikit-learn joblib
```
3. Run the script
Execute the Python script using the command:
```bash
python iris_classification.py
```
4. What the script does
- Loads and preprocesses the dataset (handling missing values and normalizing data).
- Splits data into training and testing sets.
- Trains a RandomForest classifier.
- Evaluates model performance using accuracy score, confusion matrix, and feature importance analysis.
- Saves the trained model for future use.
5. Making Predictions
Once the model is saved, you can load it and predict species for new data.
Example usage in Python:
```python
loaded_model, loaded_scaler = load_model()
sample = [5.1, 3.5, 1.4, 0.2]
print("Predicted species:", predict_species(loaded_model, loaded_scaler, sample))
```
6. Visualizing Results
- The script generates plots to visualize dataset distribution and model performance.
- Check the output directory for graphs and metrics.
7. Error Handling & Debugging
- If any dependency is missing, install it using pip.
- Ensure that `IRIS.csv` is in the correct location.
- If the script crashes, check the printed error message for debugging.
